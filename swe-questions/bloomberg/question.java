import java.util.ArrayList;
import java.util.Collections;

/*
The question asked for my first round interview of bloomberg during October 2024 was the following:

We want to implement autocorrect

The idea is that we have a word bank where we have an array full of words and an input word

So if the input word was spelled incorrectly or not present in the word bank, we could only auto correct under these conditions:

- A word exits of the same length
- only one character should be different

Now if there were more than one word we can auto correct to, we will return the alphabetically closest one

If there is no potential word to auto correct to, we return the input word

Thought proccess is the following:

We check if the word exits in word bank for early return

We create an array to store the potential words we can auto correct to

Now if not, we create an array to store the potential words we can auto correct to and  iterate over each word

We check if the words length is equal to that of the input word if not continue to the next word in the bank

Now we iterate though all of the words of the same length as the input word

We have a count variable to ensure we only have one difference

We now compare the character at i in the string of the word bank to the character at i for the input word

If they are not the same, we increment our count variable

Once we have iterated through both words doing the comparisons, we check if count is 1 

If it is we add to our list of potential auto corrected words else we don't add

Now once we have made all comparisons what we do is sort the list so that the most alphabetically closest one is at the beginning of the list

Once that is done we check if the list is not empty

If it is we return the head of the list else we return the input word

Now the time complexity is O(n * m) and space is O(n)

The time complexity being bounded by O(n * m) helps with not caring about sorting in an interview setting

Now a better way lowkey is to use a trie with a count variable
*/
public class question {

    public String autocorrect(ArrayList<String> wordBank, String word) {
        if (wordBank.contains(word)) return word;
    
        ArrayList<String> list = new ArrayList<>();
    
        for (String str : wordBank) {
            if (str.length() != word.length()) continue;
    
            int count = 0;

            for (int i = 0; i < str.length(); i++) {
                if (str.charAt(i) != word.charAt(i)) count++;
            }

            if (count == 1) list.add(str);
        }
    
        Collections.sort(list);

        return !list.isEmpty() ? list.get(0) : word;
    }
    

    public static void main(String[] args) {
        // test cases generated by chatgpt
        ArrayList<String> wordBank = new ArrayList<>();
        wordBank.add("hello");
        wordBank.add("hallo");
        wordBank.add("hullo");
        wordBank.add("world");
        wordBank.add("wordl");
        wordBank.add("coder");
        wordBank.add("could");

        question q = new question();

        System.out.println(q.autocorrect(wordBank, "hella"));  // hello
        System.out.println(q.autocorrect(wordBank, "hello"));  // hello
        System.out.println(q.autocorrect(wordBank, "hillo"));  // hallo
        System.out.println(q.autocorrect(wordBank, "apple"));  // apple
        System.out.println(q.autocorrect(wordBank, "helloo")); // helloo
    }
}
